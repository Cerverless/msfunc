# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on Linux

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@v5

    - name: Build Project
      uses: threeal/cmake-action@v2.0.0
      with:
        generator: Ninja

    - name: Delete latest tag release
      uses: cb80/delrel@latest
      with:
        tag: latest

# https://trstringer.com/github-actions-create-release-upload-artifacts/
    - name: version
      run: echo "0.0.1"
      id: version
    - name: Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: true
        release_name: ${{ steps.version.outputs.version }}
        tag_name: latest
        #body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Library
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/libmsfunc.a
        asset_name: libmsfunc.a
        asset_content_type: application/gzip
